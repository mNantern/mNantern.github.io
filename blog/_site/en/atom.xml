<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
  <title>Matthieu Nantern - Blog</title>
  <link href="http://blog.nantern.com/"/>
  <link type="application/atom+xml" rel="self" href="http://blog.nantern.com/en/atom.xml"/>
  <updated>2015-12-12T15:23:57+01:00</updated>
  <id>http://blog.nantern.com/</id>
  <author>
    <name>Matthieu Nantern</name>
    <email>matthieu.nantern@gmail.com</email>
  </author>

  
  <entry>
    <id>http://blog.nantern.com/en/2014/03/22/Puppet-Parameter-name-failed-on-package</id>
    <link type="text/html" rel="alternate" href="http://blog.nantern.com/en/2014/03/22/Puppet-Parameter-name-failed-on-package.html"/>
    <title>Puppet: Parameter name failed on Package</title>
    <published>2014-03-22T22:00:00Z</published>
    <updated>2014-03-22T22:00:00Z</updated>
    <author>
      <name>Matthieu Nantern</name>
      <uri>http://nantern.com/</uri>
    </author>
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://blog.nantern.com/assets/PL_logo.png&quot; alt=&quot;Puppet_logo&quot;&gt;&lt;/p&gt;

&lt;p&gt;Since Puppet 3.4 (or Puppet Enterprise 3.2) a useful trick does not work anymore.
It was an undocumented feature that allowed you to declare an alias on a list of packages in order to facilitate dependency handling.&lt;/p&gt;

&lt;p&gt;For example if you want that an Exec requires a list of packages, you could write:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;vg&quot;&gt;$packages_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;pkg1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;pkg2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;pkg3&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;alias&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ensure&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;installed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$packages_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;my_awesome_exec&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;...&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Package&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;alias&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But that is not working anymore, you get the following error now:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;Parameter name failed on Package[&amp;#39;alias&amp;#39;]: Name must be a String not Array
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can still keep the old behavior by using the &amp;quot;before&amp;quot; parameter:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$packages_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ensure&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;installed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Exec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;my_awesome_exec&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;my_awesome_exec&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;...&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I never think of this (meta-)parameter...&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <id>http://blog.nantern.com/en/2014/03/22/Puppet-Exec-Password</id>
    <link type="text/html" rel="alternate" href="http://blog.nantern.com/en/2014/03/22/Puppet-Exec-Password.html"/>
    <title>Dealing with password in Puppet Exec</title>
    <published>2014-03-22T12:00:00Z</published>
    <updated>2014-03-22T12:00:00Z</updated>
    <author>
      <name>Matthieu Nantern</name>
      <uri>http://nantern.com/</uri>
    </author>
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://blog.nantern.com/assets/PL_logo.png&quot; alt=&quot;Puppet_logo&quot;&gt;&lt;/p&gt;

&lt;p&gt;The issue is simple: I don&amp;#39;t want that my password appear in Puppet log if the command fail. But you still have to pass it in order to make that Exec ! Here is how to dow it:&lt;/p&gt;

&lt;p&gt;First the exec:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;my_awesome_exec&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/home/matt/swag.sh -pass=fooBar&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And the resulting output:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;Error: /home/matt/swag.sh -pass=fooBar returned 1 instead of one of [0]
Error: /Stage[main]/Ntp/Exec[my_awesome_exec]/returns: change from notrun to 0 failed: /home/matt/swag.sh -pass=fooBar returned 1 instead of one of [0]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The best solution I found to deal with that is to use environment variable like that:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;my_awesome_exec&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/home/matt/swag.sh -pass=$PASS&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;PASS=fooBar&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Be careful with the simple quote around the &amp;quot;command&amp;quot;. If you use classic quote (&amp;quot;), Puppet will try to replace $PASS so the resulting command will be:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;/home/matt/swag.sh -pass=
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Not what we want.&lt;/p&gt;

&lt;p&gt;And the final result:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;Error: /home/matt/swag.sh -pass=$PASS returned 1 instead of one of [0]
Error: /Stage[main]/Ntp/Exec[my_awesome_exec]/returns: change from notrun to 0 failed: /home/matt/swag.sh -pass=$PASS returned 1 instead of one of [0]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Much better !&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <id>http://blog.nantern.com/en/2014/03/11/Curl-Error-60</id>
    <link type="text/html" rel="alternate" href="http://blog.nantern.com/en/2014/03/11/Curl-Error-60.html"/>
    <title>Curl: Error 60</title>
    <published>2014-03-11T21:00:00Z</published>
    <updated>2014-03-11T21:00:00Z</updated>
    <author>
      <name>Matthieu Nantern</name>
      <uri>http://nantern.com/</uri>
    </author>
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://blog.nantern.com/assets/curlicon.png&quot; alt=&quot;Curl_logo&quot;&gt;&lt;/p&gt;

&lt;p&gt;Last week I had a hard time when trying to integrate an old version of a &lt;a href=&quot;https://confluence.atlassian.com/display/CROWD021/Integrating+Crowd+with+Apache&quot;&gt;Crowd Connector&lt;/a&gt; because I was always getting an error 60 when that connector tried to contact a Crowd Server.&lt;/p&gt;

&lt;p&gt;After 10&amp;#39; seconds of Googling I found that error 60 for curl means:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;Peer certificate cannot be authenticated with known CA certificates.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Great ! How can I solve that ?&lt;/p&gt;

&lt;p&gt;Unfortunately curl is bundled into the Crowd Connector and it was impossible for me to pass a parameter to specify my CA (this parameter is available in version 2.7 of the connector).&lt;/p&gt;

&lt;p&gt;The solution is to add your server CA to the system-default bundle. In RedHat it&amp;#39;s in &lt;code&gt;/etc/pki/tls/certs&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;cat my_ca.pem &amp;gt;&amp;gt; /etc/pki/tls/certs/ca-bundle.crt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And voilà ! No more issue&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <id>http://blog.nantern.com/en/2014/02/21/QTodoTxt-Why-We-Should-Do-Better</id>
    <link type="text/html" rel="alternate" href="http://blog.nantern.com/en/2014/02/21/QTodoTxt-Why-We-Should-Do-Better.html"/>
    <title>QTodoTxt: Why We Should Do Better!</title>
    <published>2014-02-21T07:00:00Z</published>
    <updated>2014-02-21T07:00:00Z</updated>
    <author>
      <name>Matthieu Nantern</name>
      <uri>http://nantern.com/</uri>
    </author>
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://blog.nantern.com/assets/QTT256.png&quot; alt=&quot;QTodoTxt_logo&quot;&gt;&lt;/p&gt;

&lt;p&gt;Last month I released v1.2.0 of &lt;a href=&quot;https://github.com/mNantern/QTodoTxt&quot;&gt;QTodoTxt&lt;/a&gt; and this release was both awesome and horrible.
Awesome because for the first time I&amp;#39;ve got external contributors, great new features and a lot of download (more than 300 in one month).&lt;/p&gt;

&lt;p&gt;And it&amp;#39;s when I saw those numbers that I realized that QTodoTxt wasn&amp;#39;t a toy project anymore.
Obviously it&amp;#39;s useful to someone and because I have users I have to make QTodoTxt better for them too !&lt;/p&gt;

&lt;p&gt;And that&amp;#39;s why the last release was horrible:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One of the main feature (Mac Os X package) does not &lt;a href=&quot;https://github.com/mNantern/QTodoTxt/issues/36&quot;&gt;work as expected&lt;/a&gt; and binary packages of QTodoTxt in general are not good enough (&lt;a href=&quot;https://github.com/mNantern/QTodoTxt/issues/48&quot;&gt;Windows package&lt;/a&gt; as an issue and &lt;a href=&quot;https://github.com/mNantern/QTodoTxt/issues/45&quot;&gt;Ubuntu too&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;We had a code regression because I was not paying enough attention to my tests.&lt;/li&gt;
&lt;li&gt;We introduced a lot of new features but never took the time to document it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So the next version (v1.3.0) will be focused on packaging and documentation.
Not very glamorous but I think it&amp;#39;s necessary. I will only include 1 new feature and the regression&amp;#39;s fix.&lt;/p&gt;

&lt;p&gt;My little list of things to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make a github site for QTodoTxt in order to show documentation, news and a proper download page&lt;/li&gt;
&lt;li&gt;Set up Travis CI to prevent regression (&lt;a href=&quot;https://github.com/mNantern/QTodoTxt/issues/42&quot;&gt;already done&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improve packaging for Ubuntu...&lt;/li&gt;
&lt;li&gt;... And Mac Os X&lt;/li&gt;
&lt;li&gt;Set up a PPA repository for Ubuntu users&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have a little time, any help is welcome !&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <id>http://blog.nantern.com/en/2014/02/01/QTodoTxt-v1-2-0</id>
    <link type="text/html" rel="alternate" href="http://blog.nantern.com/en/2014/02/01/QTodoTxt-v1-2-0.html"/>
    <title>QTodoTxt v1.2.0 released !</title>
    <published>2014-02-01T22:00:00Z</published>
    <updated>2014-02-01T22:00:00Z</updated>
    <author>
      <name>Matthieu Nantern</name>
      <uri>http://nantern.com/</uri>
    </author>
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://blog.nantern.com/assets/QTT256.png&quot; alt=&quot;QTodoTxt_logo&quot;&gt;&lt;/p&gt;

&lt;p&gt;QTodoTxt is my side project for one year now and I must say it grows quite well ! It provides a cross-platform UI client for todo.txt files (see &lt;a href=&quot;http://todotxt.com/&quot;&gt;todo.txt&lt;/a&gt; for more).&lt;/p&gt;

&lt;p&gt;I released v1.2.0 two weeks ago and for the first time people contributed code to that release. So thank you to chaghi, mgushee and CalumJEadie.&lt;/p&gt;

&lt;p&gt;They are a lot of new features in that version:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Support of &lt;a href=&quot;https://github.com/ginatrapani/todo.txt-cli/wiki/Todo.sh-Add-on-Directory#wiki-futuretasks&quot;&gt;future Tasks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A new field to filter tasks with direct text input&lt;/li&gt;
&lt;li&gt;Autosort of contexts and projects subtrees&lt;/li&gt;
&lt;li&gt;A new Mac Os X package but &lt;a href=&quot;https://github.com/mNantern/QTodoTxt/issues/36&quot;&gt;it seems&lt;/a&gt; that this package works only on one computer in the world, mine... So if you know how to make a clean Mac Os X package any help is welcome !&lt;/li&gt;
&lt;li&gt;And many more... The complete list is on the &lt;a href=&quot;https://github.com/mNantern/QTodoTxt/wiki/Changelog#v120&quot;&gt;changelog page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That version was downloaded more than 300 times in 2 weeks ! Almost as many times as an album of Justin Bieber (yes I just put Justin Bieber in a post about a Python todolist app :).&lt;/p&gt;

&lt;p&gt;So if you have more ideas for a v1.3.0, feel free to drop a ticket in &lt;a href=&quot;https://github.com/mNantern/QTodoTxt/issues&quot;&gt;GitHub&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;And if you are a:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Debian package maker&lt;/li&gt;
&lt;li&gt;Mac Os X package maker&lt;/li&gt;
&lt;li&gt;Python guru&lt;/li&gt;
&lt;li&gt;Canadian popstar&lt;/li&gt;
&lt;li&gt;Human being&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can help me ! Don&amp;#39;t hesitate to contact me :)&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <id>http://blog.nantern.com/en/2012/10/06/links-compilation-n-2</id>
    <link type="text/html" rel="alternate" href="http://blog.nantern.com/en/2012/10/06/links-compilation-n-2.html"/>
    <title>Links compilation n°2</title>
    <published>2012-10-06T00:00:00+02:00</published>
    <updated>2012-10-06T00:00:00+02:00</updated>
    <author>
      <name>Matthieu Nantern</name>
      <uri>http://nantern.com/</uri>
    </author>
    <content type="html">&lt;div class=&#39;post&#39;&gt;
&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://blog.nantern.com/assets/links.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;320&quot; src=&quot;http://blog.nantern.com/assets/links.jpg&quot; width=&quot;214&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;And here is a new list of links that interested me recently:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Twitter&lt;/b&gt;: an article describing all the &lt;a href=&quot;http://opensource.com/business/12/8/open-source-technology-behind-twitter&quot; target=&quot;_blank&quot;&gt;open source stack&lt;/a&gt; used at Twitter. A lot of classic and robust technologies like MySQL and Memcached and some other that was developped by Twitter like Zipkin and Scalding.&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://thecodeplayer.com/&quot; target=&quot;_blank&quot;&gt;The code player&lt;/a&gt; : a very cool website showing how to create effects from scratch using html 5, css 3, Javascript... For example : &lt;a href=&quot;http://thecodeplayer.com/walkthrough/make-an-accordian-style-slider-in-css3&quot; target=&quot;_blank&quot;&gt;how to make an accordian style slider in CSS3 ?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Javascript&lt;/b&gt;: a collection of &lt;a href=&quot;http://jsbooks.revolunet.com/&quot; target=&quot;_blank&quot;&gt;JavaScript book&lt;/a&gt; to learn a lot of things about Javascript, CoffeeScript...&lt;/li&gt;&lt;li&gt;&lt;b&gt;RSS&lt;/b&gt;: I love RSS feed, I find that it is a convenient way to learn things and be notified when new article are posted without having to go to that site every hour. But sometimes the RSS feed is uncomplete. That site can help you : &lt;a href=&quot;http://fulltextrssfeed.com/&quot; target=&quot;_blank&quot;&gt;Full text RSS feed.&lt;/a&gt; I can not live without it !&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;That&#39;s all for this time, folks !&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <id>http://blog.nantern.com/en/2012/08/14/export-spotify-playlist-to-csv</id>
    <link type="text/html" rel="alternate" href="http://blog.nantern.com/en/2012/08/14/export-spotify-playlist-to-csv.html"/>
    <title>Export Spotify Playlist to CSV</title>
    <published>2012-08-14T00:00:00+02:00</published>
    <updated>2012-08-14T00:00:00+02:00</updated>
    <author>
      <name>Matthieu Nantern</name>
      <uri>http://nantern.com/</uri>
    </author>
    <content type="html">&lt;div class=&#39;post&#39;&gt;
&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://blog.nantern.com/assets/Spotify.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img alt=&quot;spotify&quot; border=&quot;0&quot; src=&quot;http://blog.nantern.com/assets/Spotify.jpg&quot; height=&quot;225&quot; title=&quot;&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Today, I wanted to export my Spotify playlist to a classic CSV file. I needed it because I like to keep my data offline (we never know...).&lt;br /&gt;&lt;br /&gt;Step 1: Google !&amp;nbsp; I found a couple of links like &lt;a href=&quot;http://www.spotify.com/en/about/spotify-on-the-web/playlist-converters/&quot; target=&quot;_blank&quot;&gt;this one&lt;/a&gt; or &lt;a href=&quot;http://www.spotify-forum.com/viewtopic.php?f=4&amp;amp;t=15&quot; target=&quot;_blank&quot;&gt;that one&lt;/a&gt; but it was not what I was looking for. So...&lt;br /&gt;&lt;br /&gt;Step 2: do it myself ! When you copy/paste HTTP URL (select all your songs and then right clik, copy HTTP URL) you got a big line with http uri. So I just did a &quot;GET&quot; on it to see what I got back.&lt;br /&gt;&lt;br /&gt;It was an HTLM page with all the data that I wanted (title, artist and album name) so I wanted to parse that page.&lt;br /&gt;&lt;br /&gt;To do that I used a great script &quot;&lt;a href=&quot;http://simplehtmldom.sourceforge.net/&quot; target=&quot;_blank&quot;&gt;PHP Simple HTML DOM Parser&lt;/a&gt;&quot; and I was able to get all the data needed !&lt;br /&gt;&lt;br /&gt;You can get the source code here: &lt;a href=&quot;https://bitbucket.org/matthieu_nantern/dlspotifydata/overview&quot;&gt;https://bitbucket.org/matthieu_nantern/dlspotifydata/overview&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;It&#39;s very easy to use:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;Copy/paste your playlist in a text file, you have got a big ugly line and a text file called input.txt (for example...)&lt;/li&gt;&lt;li&gt;Use the script: php -f dlSpotify.php input.txt output.csv&lt;/li&gt;&lt;li&gt;Tadaaa ! output.csv is a CSV-file, with tabulation separation. Column 1 is the track title, Column 2 the artist(s) and Column 3 the album title.&lt;/li&gt;&lt;/ol&gt;Enjoy ! &lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <id>http://blog.nantern.com/en/2012/06/13/links-compilation-n-1</id>
    <link type="text/html" rel="alternate" href="http://blog.nantern.com/en/2012/06/13/links-compilation-n-1.html"/>
    <title>Links compilation n°1</title>
    <published>2012-06-13T00:00:00+02:00</published>
    <updated>2012-06-13T00:00:00+02:00</updated>
    <author>
      <name>Matthieu Nantern</name>
      <uri>http://nantern.com/</uri>
    </author>
    <content type="html">&lt;div class=&#39;post&#39;&gt;
&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://blog.nantern.com/assets/links.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;320&quot; src=&quot;http://blog.nantern.com/assets/links.jpg&quot; width=&quot;214&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;And here is the list of links that interested me recently:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Mysql&lt;/b&gt;: when we migrate from MyISAM to InnoDB, the same question always pop up: what to do with select(*) query ? &lt;a href=&quot;http://www.fromdual.com/myisam-to-innodb-table-and-select-count-star&quot; target=&quot;_blank&quot;&gt;Shinguz&lt;/a&gt; has the answer !&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.igvita.com/2012/06/04/chrome-networking-dns-prefetch-and-tcp-preconnect/&quot; target=&quot;_blank&quot;&gt;&lt;b&gt;Chrome&lt;/b&gt;&lt;/a&gt;: how chrome prefetch internet page before you press enter.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Doom 3&lt;/b&gt;: an incredible work by Fabien Sanglard who made a complete &lt;a href=&quot;http://fabiensanglard.net/doom3/index.php&quot; target=&quot;_blank&quot;&gt;source code review&lt;/a&gt; of &lt;a href=&quot;http://en.wikipedia.org/wiki/Id_Tech_4&quot; target=&quot;_blank&quot;&gt;idTech4&lt;/a&gt; engine.&lt;/li&gt;&lt;li&gt;&lt;b&gt;The C10K problem&lt;/b&gt;: &quot; It&#39;s time for web servers to handle ten thousand clients simultaneously&quot;. Nice idea, hard challenge. This &lt;a href=&quot;http://www.kegel.com/c10k.html&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt; help us to know how to do it.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;
</content>
  </entry>
  
 
</feed>
